(self["webpackChunkc_tool"]=self["webpackChunkc_tool"]||[]).push([[7763],{2398:function(e,t,n){"use strict";n.d(t,{Z:function(){return h}});var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("Input",{staticClass:"auto-height-textarea",style:e.style,attrs:{type:"textarea",placeholder:e.placeholder},model:{value:e.textarea,callback:function(t){e.textarea=t},expression:"textarea"}})},r=[],o=(n(9653),n(92222),n(69600),n(96486)),c=n.n(o),i={name:"autoHeightTextarea",props:{value:{type:[String,Number],default:""},placeholder:{type:String,default:""},height:{type:[String,Number],default:""}},data:function(){return{textarea:""}},computed:{style:function(){var e=[];return this.height&&e.push("height:".concat(this.height).concat(c().isNumber(this.height)?"px":"")),e.join(";")}},watch:{textarea:function(e){e!==this.value&&this.$emit("input",e)},value:function(e){e!==this.textarea&&(this.textarea=e)}},created:function(){this.textarea=this.value}},d=i,s=n(1001),l=(0,s.Z)(d,a,r,!1,null,null,null),h=l.exports},46976:function(e,t,n){"use strict";n.d(t,{Z:function(){return u}});var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{style:"height:"+e.height},[e._t("default")],2)},r=[],o=n(62032),c=(n(9653),n(92222),n(57327),n(41539),n(26699),n(32023),n(34809));function i(e){var t=document.querySelector(e);if(null===t)return 0;var n=window.getComputedStyle(t),a=parseFloat(n["marginTop"])+parseFloat(n["marginBottom"]);return Math.ceil(t.offsetHeight+a)}var d={name:"heightResize",props:{append:{type:Array,default:function(){return[]}},reduce:{type:Number,default:0},remove:{type:Array,default:function(){return[]}},ignore:{type:Boolean,default:!1}},data:function(){return{height:"auto"}},methods:{reportWindowSize:function(){var e=this;setTimeout((function(){return e.resize()}),2)},resize:function(){var e,t=this,n=window.innerHeight,a=[".tool-select-block",".tool-category-menu-block",".ctool-bottom"],r=a.filter((function(e){return!t.remove.includes(e)})).concat(this.append),c=(0,o.Z)(r);try{for(c.s();!(e=c.n()).done;){var d=e.value;n-=i(d)}}catch(s){c.e(s)}finally{c.f()}this.reduce>0&&(n-=this.reduce),n>100&&(n-=5),this.ignore||(this.height=n+"px"),this.$emit("resize",n)}},destroyed:function(){window.removeEventListener(c.KU,this.reportWindowSize)},mounted:function(){window.addEventListener(c.KU,this.reportWindowSize),this.resize()}},s=d,l=n(1001),h=(0,l.Z)(s,a,r,!1,null,null,null),u=h.exports},27763:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return M}});var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("Row",{staticClass:"page-option-block",staticStyle:{"margin-bottom":"10px"},attrs:{gutter:16}},[n("Col",{attrs:{span:"12"}},[n("input-block",[n("Input",{attrs:{type:"textarea",rows:3,placeholder:e.$t("regex_expression")},model:{value:e.current.input,callback:function(t){e.$set(e.current,"input",t)},expression:"current.input"}}),n("template",{slot:"extra"},["zh_CN"===e.locale?n("referenceZh",{on:{"on-select":function(t){return e.current.input=t}}}):n("referenceEn",{on:{"on-select":function(t){return e.current.input=t}}})],1)],2)],1),n("Col",{attrs:{span:"12"}},[n("input-block",[n("Input",{attrs:{type:"textarea",rows:3,placeholder:e.$t("regex_replace_content"),disabled:1===e.current.isDelete},model:{value:e.current.replace,callback:function(t){e.$set(e.current,"replace",t)},expression:"current.replace"}}),n("template",{slot:"extra"},[n("RadioGroup",{model:{value:e.current.isDelete,callback:function(t){e.$set(e.current,"isDelete",t)},expression:"current.isDelete"}},[n("Radio",{attrs:{label:0}},[e._v(" "+e._s(e.$t("regex_replace"))+" ")]),n("Radio",{attrs:{label:1}},[e._v(" "+e._s(e.$t("regex_delete"))+" ")])],1)],1)],2)],1)],1),n("heightResize",{attrs:{append:[".page-option-block"]},on:{resize:e.resize}},[n("Row",{attrs:{gutter:16}},[n("Col",{attrs:{span:"12"}},[n("input-block",[n("autoHeightTextarea",{attrs:{height:e.height,placeholder:e.$t("regex_input")},model:{value:e.current.content,callback:function(t){e.$set(e.current,"content",t)},expression:"current.content"}}),n("template",{slot:"extra"},[n("Checkbox",{model:{value:e.current.isGlobal,callback:function(t){e.$set(e.current,"isGlobal",t)},expression:"current.isGlobal"}},[e._v(e._s(e.$t("regex_global")))]),n("Checkbox",{model:{value:e.current.isIgnoreCase,callback:function(t){e.$set(e.current,"isIgnoreCase",t)},expression:"current.isIgnoreCase"}},[e._v(e._s(e.$t("regex_ignore_case")))])],1)],2)],1),n("Col",{attrs:{span:"12"}},[n("autoHeightTextarea",{attrs:{height:e.height,value:e.output,placeholder:e.$t("regex_output")}})],1)],1)],1)],1)},r=[],o=(n(74916),n(15306),n(24603),n(28450),n(88386),n(39714),n(4723),n(2398)),c=n(46976),i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("Select",{staticStyle:{width:"100px"},attrs:{size:"small",placeholder:"Common"},on:{"on-change":e.select}},e._l(e.expression,(function(t,a){return n("Option",{key:a,attrs:{value:t.regex}},[e._v(e._s(t.name))])})),1),n("Button",{staticStyle:{"margin-left":"5px"},attrs:{type:"primary",size:"small"},on:{click:function(t){e.referenceShow=!0}}},[e._v("Reference")]),n("Drawer",{attrs:{title:"Reference",width:100},model:{value:e.referenceShow,callback:function(t){e.referenceShow=t},expression:"referenceShow"}},[n("Table",{attrs:{columns:e.referenceColumns,data:e.reference},scopedSlots:e._u([{key:"_text",fn:function(t){var a=t.row;return[n("div",{staticStyle:{padding:"10px 0"},domProps:{innerHTML:e._s(a.text)}})]}}])})],1)],1)},d=[],s={methods:{select:function(e){this.$emit("on-select",e)}},data:function(){return{referenceShow:!1,expression:[{regex:"(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6011[0-9]{12}|622((12[6-9]|1[3-9][0-9])|([2-8][0-9][0-9])|(9(([0-1][0-9])|(2[0-5]))))[0-9]{10}|64[4-9][0-9]{13}|65[0-9]{14}|3(?:0[0-5]|[68][0-9])[0-9]{11}|3[47][0-9]{13})*",name:"All major credit cards regex"},{regex:"[a-zA-Z0-9]*",name:"Alpha-numeric characters"},{regex:"[a-zA-Z0-9 ]*",name:"Alpha-numeric characters with spaces"},{regex:"[a-zA-Z]*",name:"Alphabetic characters"},{regex:"(3[47][0-9]{13})*",name:"Amex credit card regex"},{regex:"((0[289][0-9]{2})|([1345689][0-9]{3})|(2[0-8][0-9]{2})|(290[0-9])|(291[0-4])|(7[0-4][0-9]{2})|(7[8-9][0-9]{2}))*",name:"Australian Postal Codes"},{regex:"([ABCEGHJKLMNPRSTVXY][0-9][A-Z] [0-9][A-Z][0-9])*",name:"Canadian Postal Codes"},{regex:"(?:AB|BC|MB|N[BLTSU]|ON|PE|QC|SK|YT)*",name:"Canadian Province Abbreviations"},{regex:"(0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)?[0-9]{2}",name:"Date (MM/DD/YYYY)"},{regex:"(19|20)?[0-9]{2}[- /.](0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])",name:"Date (YYYY/MM/DD)"},{regex:"(3(?:0[0-5]|[68][0-9])[0-9]{11})*",name:"Diner's Club credit card regex"},{regex:"((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*",name:"IP address regex"},{regex:"([a-z])+",name:"Lowercase letters"},{regex:"([A-Z])+",name:"Uppercase letters"},{regex:"(5[1-5][0-9]{14})*",name:"MasterCard credit card numbers"},{regex:"((([0-9]{1})*[- .(]*([0-9]{3})[- .)]*[0-9]{3}[- .]*[0-9]{4})+)*",name:"Phone number regex"},{regex:"([0-9]{3}[-]*[0-9]{2}[-]*[0-9]{4})*",name:"SSN regex"},{regex:"([A-Z]{1,2}[0-9][A-Z0-9]? [0-9][ABD-HJLNP-UW-Z]{2})*",name:"UK Postal Codes regex"},{regex:"(?:A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])*",name:"US States regex"},{regex:"([0-9]{5}(?:-[0-9]{4})?)*",name:"US ZIP Codes regex"},{regex:"(4[0-9]{12}(?:[0-9]{3})?)*",name:"Visa credit card numbers"},{regex:"(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6011[0-9]{12}|3(?:0[0-5]|[68][0-9])[0-9]{11}|3[47][0-9]{13})",name:"All major credit cards regex"},{regex:"[a-zA-Z0-9]+",name:"alpha-numeric characters"},{regex:"[a-zA-Z]+",name:"Alphabetic characters"},{regex:"[ABCEGHJKLMNPRSTVXY][0-9][A-Z] [0-9][A-Z][0-9]",name:"Canadian Postal Codes"},{regex:"[0-9]+",name:"digits"},{regex:"[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,4}",name:"email regex"},{regex:"(([0-9]{1})*[- .(]*([0-9]{3})[- .)]*[0-9]{3}[- .]*[0-9]{4})+",name:"phone number regex"},{regex:"((http|https|ftp)://)?([[a-zA-Z0-9]-.])+(.)([[a-zA-Z0-9]]){2,4}([[a-zA-Z0-9]/+=%&_.~?-]*)",name:"URL regex"},{regex:"[0-9]{5}(?:-[0-9]{4})?",name:"US ZIP Codes regex"}],referenceColumns:[{title:"Character",key:"name",width:120},{title:"What does it do?",slot:"_text"}],reference:[{name:"\\",text:"Used to indicate that the next character should NOT be interpreted literally. For example, the character 'w' by itself will be interpreted as 'match the character w', but using '\\w' signifies 'match an alpha-numeric character including underscore'. Used to indicate that a metacharacter is to be interpreted literally. For example, the '.' metacharacter means 'match any single character but a new line', but if we would rather match a dot character instead, we would use '\\.'."},{name:"^",text:"Matches the beginning of the input. If in multiline mode, it also matches after a line break character, hence every new line. When used in a set pattern ([^abc]), it negates the set; match anything not enclosed in the brackets"},{name:"$",text:"Matches the end of the input. If in multiline mode, it also matches before a line break character, hence every end of line."},{name:"*",text:"Matches the preceding character 0 or more times."},{name:"+",text:"Matches the preceding character 1 or more times."},{name:"?",text:"Matches the preceding character 0 or 1 time. When used after the quantifiers *, +, ? or {}, makes the quantifier non-greedy; it will match the minimum number of times as opposed to matching the maximum number of times."},{name:".",text:"Matches any single character except the newline character."},{name:"(x)",text:"Matches 'x' and remembers the match. Also known as capturing parenthesis."},{name:"(?:x)",text:"Matches 'x' but does NOT remember the match. Also known as NON-capturing parenthesis."},{name:"x(?=y)",text:"Matches 'x' only if 'x' is followed by 'y'. Also known as a lookahead."},{name:"x(?!y)",text:"Matches 'x' only if 'x' is NOT followed by 'y'. Also known as a negative lookahead."},{name:"x|y",text:"Matches 'x' OR 'y'."},{name:"{n}",text:"Matches the preceding character exactly n times."},{name:"{n,m}",text:"Matches the preceding character at least n times and at most m times. n and m can be omitted if zero.."},{name:"[abc]",text:"Matches any of the enclosed characters. Also known as a character set. You can create range of characters using the hyphen character such as A-Z (A to Z). Note that in character sets, special characters (., *, +) do not have any special meaning."},{name:"[^abc]",text:"Matches anything NOT enclosed by the brackets. Also known as a negative character set."},{name:"[\\b]",text:"Matches a backspace."},{name:"\\b",text:"Matches a word boundary. Boundaries are determined when a word character is NOT followed or NOT preceded with another word character."},{name:"\\B",text:"Matches a NON-word boundary. Boundaries are determined when two adjacent characters are word characters OR non-word characters."},{name:"\\cX",text:"Matches a control character. X must be between A to Z inclusive."},{name:"\\d",text:"Matches a digit character. Same as [0-9] or [0123456789]."},{name:"\\D",text:"Matches a NON-digit character. Same as [^0-9] or [^0123456789]."},{name:"\\f",text:"Matches a form feed."},{name:"\\n",text:"Matches a line feed."},{name:"\\r",text:"Matches a carriage return."},{name:"\\s",text:"Matches a single white space character. This includes space, tab, form feed and line feed."},{name:"\\S",text:"Matches anything OTHER than a single white space character. Anything other than space, tab, form feed and line feed."},{name:"\\t",text:"Matches a tab."},{name:"\\v",text:"Matches a vertical tab."},{name:"\\w",text:"Matches any alphanumeric character including underscore. Equivalent to [A-Za-z0-9_]."},{name:"\\W",text:"Matches anything OTHER than an alphanumeric character including underscore. Equivalent to [^A-Za-z0-9_]."},{name:"\\x",text:"A back reference to the substring matched by the x parenthetical expression. x is a positive integer."},{name:"\\0",text:"Matches a NULL character."},{name:"\\xhh",text:"Matches a character with the 2-digits hexadecimal code."},{name:"\\uhhhh",text:"Matches a character with the 4-digits hexadecimal code."}]}}},l=s,h=n(1001),u=(0,h.Z)(l,i,d,!1,null,null,null),m=u.exports,x=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("Select",{staticStyle:{width:"80px"},attrs:{size:"small",placeholder:"常用"},on:{"on-change":e.select}},e._l(e.expression,(function(t,a){return n("Option",{key:a,attrs:{value:t.regex}},[e._v(e._s(t.name))])})),1),n("Button",{staticStyle:{"margin-left":"5px"},attrs:{type:"primary",size:"small"},on:{click:function(t){e.referenceShow=!0}}},[e._v("参考")]),n("Drawer",{attrs:{title:"参考",width:100},model:{value:e.referenceShow,callback:function(t){e.referenceShow=t},expression:"referenceShow"}},[n("Table",{attrs:{columns:e.referenceColumns,data:e.reference},scopedSlots:e._u([{key:"_text",fn:function(t){var a=t.row;return[n("div",{staticStyle:{padding:"10px 0"},domProps:{innerHTML:e._s(a.text)}})]}}])})],1)],1)},p=[],f={methods:{select:function(e){this.$emit("on-select",e)}},data:function(){return{referenceShow:!1,expression:[{regex:"[\\u4e00-\\u9fa5]",name:"中文字符"},{regex:"[^\\x00-\\xff]",name:"双字节字符(包括汉字在内)"},{regex:"\\n\\s*\\r",name:"空白行"},{regex:"[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?",name:"Email地址"},{regex:"[a-zA-z]+://[^\\s]*",name:"网址URL"},{regex:"[1][3,4,5,7,8][0-9]{9}",name:"手机"},{regex:"\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",name:"IP地址"},{regex:"\\d{3}-\\d{8}|\\d{4}-\\d{7,8}",name:"国内电话号码"},{regex:"[1-9][0-9]{4,}",name:"腾讯QQ号"},{regex:"[1-9]\\d{5}(?!\\d)",name:"中国邮政编码"},{regex:"([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8])))",name:"(年-月-日)格式日期"},{regex:"[1-9]\\d*",name:"正整数"},{regex:"-[1-9]\\d*",name:"负整数"},{regex:"-?[1-9]\\d*",name:"整数"},{regex:"[1-9]\\d*|0",name:"非负整数（正整数 + 0）"},{regex:"-[1-9]\\d*|0",name:"非正整数（负整数 + 0）"},{regex:"[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*",name:"正浮点数"},{regex:"-[1-9]\\d*\\.\\d*|-0\\.\\d*[1-9]\\d*",name:"负浮点数"}],referenceColumns:[{title:"字符",key:"name",width:100},{title:"描述",slot:"_text"}],reference:[{name:"\\",text:"将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“<code>n</code>”匹配字符“<code>n</code>”。“<code>\\n</code>”匹配一个换行符。串行“<code>\\\\</code>”匹配“<code>\\</code>”而“<code>\\(</code>”则匹配“<code>(</code>”。"},{name:"^",text:"匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“<code>\\n</code>”或“<code>\\r</code>”之后的位置。"},{name:"$",text:"匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“<code>\\n</code>”或“<code>\\r</code>”之前的位置。"},{name:"*",text:"匹配前面的子表达式零次或多次。例如，zo*能匹配“<code>z</code>”以及“<code>zoo</code>”。*等价于{0,}。"},{name:"+",text:"匹配前面的子表达式一次或多次。例如，“<code>zo+</code>”能匹配“<code>zo</code>”以及“<code>zoo</code>”，但不能匹配“<code>z</code>”。+等价于{1,}。"},{name:"?",text:"匹配前面的子表达式零次或一次。例如，“<code>do(es)?</code>”可以匹配“<code>does</code>”或“<code>does</code>”中的“<code>do</code>”。?等价于{0,1}。"},{name:"{n}",text:"n是一个非负整数。匹配确定的n次。例如，“<code>o{2}</code>”不能匹配“<code>Bob</code>”中的“<code>o</code>”，但是能匹配“<code>food</code>”中的两个o。"},{name:"{n,}",text:"n是一个非负整数。至少匹配n次。例如，“<code>o{2,}</code>”不能匹配“<code>Bob</code>”中的“<code>o</code>”，但能匹配“<code>foooood</code>”中的所有o。“<code>o{1,}</code>”等价于“<code>o+</code>”。“<code>o{0,}</code>”则等价于“<code>o*</code>”。"},{name:"{n,m}",text:"m和n均为非负整数，其中n&lt;=m。最少匹配n次且最多匹配m次。例如，“<code>o{1,3}</code>”将匹配“<code>fooooood</code>”中的前三个o。“<code>o{0,1}</code>”等价于“<code>o?</code>”。请注意在逗号和两个数之间不能有空格。"},{name:"?",text:"当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“<code>oooo</code>”，“<code>o+?</code>”将匹配单个“<code>o</code>”，而“<code>o+</code>”将匹配所有“<code>o</code>”。"},{name:".",text:"匹配除“<code>\\</code><code>n</code>”之外的任何单个字符。要匹配包括“<code>\\</code><code>n</code>”在内的任何字符，请使用像“<code>(.|\\n)</code>”的模式。"},{name:"(pattern)",text:"匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“<code>\\(</code>”或“<code>\\)</code>”。"},{name:"(?:pattern)",text:"匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“<code>(|)</code>”来组合一个模式的各个部分是很有用。例如“<code>industr(?:y|ies)</code>”就是一个比“<code>industry|industries</code>”更简略的表达式。"},{name:"(?=pattern)",text:"正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“<code>Windows(?=95|98|NT|2000)</code>”能匹配“<code>Windows2000</code>”中的“<code>Windows</code>”，但不能匹配“<code>Windows3.1</code>”中的“<code>Windows</code>”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。"},{name:"(?!pattern)",text:"正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“<code>Windows(?!95|98|NT|2000)</code>”能匹配“<code>Windows3.1</code>”中的“<code>Windows</code>”，但不能匹配“<code>Windows2000</code>”中的“<code>Windows</code>”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始"},{name:"(?&lt;=pattern)",text:"反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“<code>(?&lt;=95|98|NT|2000)Windows</code>”能匹配“<code>2000Windows</code>”中的“<code>Windows</code>”，但不能匹配“<code>3.1Windows</code>”中的“<code>Windows</code>”。"},{name:"(?&lt;!pattern)",text:"反向否定预查，与正向否定预查类拟，只是方向相反。例如“<code>(?&lt;!95|98|NT|2000)Windows</code>”能匹配“<code>3.1Windows</code>”中的“<code>Windows</code>”，但不能匹配“<code>2000Windows</code>”中的“<code>Windows</code>”。"},{name:"x|y",text:"匹配x或y。例如，“<code>z|food</code>”能匹配“<code>z</code>”或“<code>food</code>”。“<code>(z|f)ood</code>”则匹配“<code>zood</code>”或“<code>food</code>”。"},{name:"[xyz]",text:"字符集合。匹配所包含的任意一个字符。例如，“<code>[abc]</code>”可以匹配“<code>plain</code>”中的“<code>a</code>”。"},{name:"[^xyz]",text:"负值字符集合。匹配未包含的任意字符。例如，“<code>[^abc]</code>”可以匹配“<code>plain</code>”中的“<code>p</code>”。"},{name:"[a-z]",text:"字符范围。匹配指定范围内的任意字符。例如，“<code>[a-z]</code>”可以匹配“<code>a</code>”到“<code>z</code>”范围内的任意小写字母字符。"},{name:"[^a-z]",text:"负值字符范围。匹配任何不在指定范围内的任意字符。例如，“<code>[^a-z]</code>”可以匹配任何不在“<code>a</code>”到“<code>z</code>”范围内的任意字符。"},{name:"\\b",text:"匹配一个单词边界，也就是指单词和空格间的位置。例如，“<code>er\\b</code>”可以匹配“<code>never</code>”中的“<code>er</code>”，但不能匹配“<code>verb</code>”中的“<code>er</code>”。"},{name:"\\B",text:"匹配非单词边界。“<code>er\\B</code>”能匹配“<code>verb</code>”中的“<code>er</code>”，但不能匹配“<code>never</code>”中的“<code>er</code>”。"},{name:"\\cx",text:"匹配由x指明的控制字符。例如，<code>\\cM</code>匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“<code>c</code>”字符。"},{name:"\\d",text:"匹配一个数字字符。等价于[0-9]。"},{name:"\\D",text:"匹配一个非数字字符。等价于[^0-9]。"},{name:"\\f",text:"匹配一个换页符。等价于\\x0c和\\cL。"},{name:"\\n",text:"匹配一个换行符。等价于\\x0a和\\cJ。"},{name:"\\r",text:"匹配一个回车符。等价于\\x0d和\\cM。"},{name:"\\s",text:"匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。"},{name:"\\S",text:"匹配任何非空白字符。等价于[^ \\f\\n\\r\\t\\v]。"},{name:"\\t",text:"匹配一个制表符。等价于\\x09和\\cI。"},{name:"\\v",text:"匹配一个垂直制表符。等价于\\x0b和\\cK。"},{name:"\\w",text:"匹配包括下划线的任何单词字符。等价于“<code>[A-Za-z0-9_]</code>”。"},{name:"\\W",text:"匹配任何非单词字符。等价于“<code>[^A-Za-z0-9_]</code>”。"},{name:"\\xn",text:"匹配n，其中n为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“<code>\\x41</code>”匹配“<code>A</code>”。“<code>\\x041</code>”则等价于“<code>\\x04&amp;1</code>”。正则表达式中可以使用ASCII编码。."},{name:"\\num",text:"匹配num，其中num是一个正整数。对所获取的匹配的引用。例如，“<code>(.)\\1</code>”匹配两个连续的相同字符。"},{name:"\\n",text:"标识一个八进制转义值或一个向后引用。如果\\n之前至少n个获取的子表达式，则n为向后引用。否则，如果n为八进制数字（0-7），则n为一个八进制转义值。"},{name:"\\nm",text:"标识一个八进制转义值或一个向后引用。如果\\nm之前至少有nm个获得子表达式，则nm为向后引用。如果\\nm之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字（0-7），则\\nm将匹配八进制转义值nm。"},{name:"\\nml",text:"如果n为八进制数字（0-3），且m和l均为八进制数字（0-7），则匹配八进制转义值nml。"},{name:"\\un",text:"匹配n，其中n是一个用四个十六进制数字表示的Unicode字符。例如，\\u00A9匹配版权符号（©）。"}]}}},g=f,w=(0,h.Z)(g,x,p,!1,null,null,null),b=w.exports,v=n(28437),y={components:{autoHeightTextarea:o.Z,heightResize:c.Z,referenceEn:m,referenceZh:b},created:function(){this.$initToolData()},computed:{locale:function(){return(0,v.BH)()},replaceContent:function(){return!(!this.current.isDelete&&!this.current.replace)&&(this.current.isDelete?"":this.current.replace)},output:function(){var e="";try{if(!this.current.input||!this.current.content)return e;var t=new RegExp(this.current.input,(this.current.isIgnoreCase?"i":"")+(this.current.isGlobal?"g":""));if(!1!==this.replaceContent)e=this.current.content.replace(t,this.replaceContent);else{var n=this.current.content.match(t),a="";if(n){a+=this.$t("regex_output_count",[n.length])+"\n";for(var r=0;r<n.length;r++)a+="$"+r+" -> "+n[r]+"\r\n"}else a=this.$t("regex_output_emty");e=a}this.$saveToolData(this.current)}catch(o){e=this.$t("regex_error",[o.message])}return e}},methods:{resize:function(e){this.height=e}},data:function(){return{current:{input:"[\\dheo]",content:(new Date).getFullYear()+" hello WORLD 你好世界",output:"",replace:"",isGlobal:!0,isIgnoreCase:!0,isDelete:0},height:100}}},A=y,_=(0,h.Z)(A,a,r,!1,null,null,null),M=_.exports},50863:function(e,t,n){var a=n(1702);e.exports=a(1..valueOf)},92222:function(e,t,n){"use strict";var a=n(82109),r=n(17854),o=n(47293),c=n(43157),i=n(70111),d=n(47908),s=n(26244),l=n(86135),h=n(65417),u=n(81194),m=n(5112),x=n(7392),p=m("isConcatSpreadable"),f=9007199254740991,g="Maximum allowed index exceeded",w=r.TypeError,b=x>=51||!o((function(){var e=[];return e[p]=!1,e.concat()[0]!==e})),v=u("concat"),y=function(e){if(!i(e))return!1;var t=e[p];return void 0!==t?!!t:c(e)},A=!b||!v;a({target:"Array",proto:!0,forced:A},{concat:function(e){var t,n,a,r,o,c=d(this),i=h(c,0),u=0;for(t=-1,a=arguments.length;t<a;t++)if(o=-1===t?c:arguments[t],y(o)){if(r=s(o),u+r>f)throw w(g);for(n=0;n<r;n++,u++)n in o&&l(i,u,o[n])}else{if(u>=f)throw w(g);l(i,u++,o)}return i.length=u,i}})},9653:function(e,t,n){"use strict";var a=n(19781),r=n(17854),o=n(1702),c=n(54705),i=n(31320),d=n(92597),s=n(79587),l=n(47976),h=n(52190),u=n(57593),m=n(47293),x=n(8006).f,p=n(31236).f,f=n(3070).f,g=n(50863),w=n(53111).trim,b="Number",v=r[b],y=v.prototype,A=r.TypeError,_=o("".slice),M=o("".charCodeAt),S=function(e){var t=u(e,"number");return"bigint"==typeof t?t:z(t)},z=function(e){var t,n,a,r,o,c,i,d,s=u(e,"number");if(h(s))throw A("Cannot convert a Symbol value to a number");if("string"==typeof s&&s.length>2)if(s=w(s),t=M(s,0),43===t||45===t){if(n=M(s,2),88===n||120===n)return NaN}else if(48===t){switch(M(s,1)){case 66:case 98:a=2,r=49;break;case 79:case 111:a=8,r=55;break;default:return+s}for(o=_(s,2),c=o.length,i=0;i<c;i++)if(d=M(o,i),d<48||d>r)return NaN;return parseInt(o,a)}return+s};if(c(b,!v(" 0o1")||!v("0b1")||v("+0x1"))){for(var N,C=function(e){var t=arguments.length<1?0:v(S(e)),n=this;return l(y,n)&&m((function(){g(n)}))?s(Object(t),n,C):t},k=a?x(v):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),T=0;k.length>T;T++)d(v,N=k[T])&&!d(C,N)&&f(C,N,p(v,N));C.prototype=y,y.constructor=C,i(r,b,C)}}}]);